Pandas：
https://zhuanlan.zhihu.com/p/340119918

面向对象编程思想
https://zhuanlan.zhihu.com/p/671862064

flask框架
https://blog.csdn.net/wly55690/article/details/131683846

linux教程
https://zhuanlan.zhihu.com/p/420247468

SQL
https://zhuanlan.zhihu.com/p/273568626

from collections import deque

class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        queue = SingleQueue()
        result = []
        for i in range(k):
            queue.enqueue(nums[i])
        print(queue)
        result.append(queue.top())
        for i in range(k, len(nums)):
            queue.pop(nums[i-k])
            queue.enqueue(nums[i])
            result.append(queue.top())
        return result

    class SingleQueue:
        def __init__(self):
            self.queue = deque()

        def enqueue(self, value):
            while self.queue and self.queue[-1] < value:
                self.queue.pop()
            self.queue.append(value)

        def pop(self, value):
            if self.queue and value == self.queue[0]:
                self.queue.popleft()

        def top(self):
            return self.queue[0]
